!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var n=e();for(var r in n)("object"==typeof exports?exports:t)[r]=n[r]}}(this,function(){return function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";n.r(e);const r=document.createElement("canvas");r.style.display="none",document.body.append(r),n.d(e,"Color",function(){return o});class o{constructor(t=0,e=0,n=0){this.r=t,this.g=e,this.b=n}static compose(t){return(t.r<<2*o.bit)+(t.g<<o.bit)+t.b}static delta(t,e){return Math.abs(t.r-t.r)+Math.abs(t.g-e.g)+Math.abs(t.b-e.b)}get hex(){return"#"+this.toString()}get rgb(){return`rgb(${this.r}, ${this.g}, ${this.b})`}toString(){return this.r.toString(16)+this.g.toString(16)+this.b.toString(16)}delta(t){return o.delta(this,t)}get compose(){return o.compose(this)}}o.bit=5;class i{constructor(t,e){this.pixels=[],this._length=0,t&&(this.pixels=t,this._length=e)}fromColors(t){if(t)return this._length=t.length,t.forEach(t=>{const e=t.compose,n=this.pixels[e];n?n.num+=1:this.pixels[e]={num:1,color:t}}),this}iterPixels(t){Object.keys(this.pixels).forEach(e=>{t(this.pixels[e])})}get length(){return this._length}mainColor(){const t={r:0,g:0,b:0};return this.iterPixels(e=>{t.r+=e.num*e.color.r,t.g+=e.num*e.color.g,t.b+=e.num*e.color.b}),t.r=t.r/this.length,t.g=t.g/this.length,t.b=t.b/this.length,new o(t.r,t.g,t.b)}deltaDimension(){let t="";const e=new o(0,0,0),n=new o(255,255,255),r=["r","g","b"];this.iterPixels(t=>{r.forEach(r=>{e[r]=Math.max(e[r],t.color[r]),n[r]=Math.min(n[r],t.color[r])})});const i=new o;i.r=e.r-n.r,i.g=e.g-n.g,i.b=e.b-n.b;const s=Math.max(i.r,i.g,i.b);return{dimension:t=s===i.r?"r":s===i.g?"g":"b",middle:(e[t]+n[t])/2}}cutWidthDimension(){const{dimension:t,middle:e}=this.deltaDimension(),n={length:0,pixels:[]},r={length:0,pixels:[]};return this.iterPixels(o=>{o.color[t]>e?(r.length+=o.num,r.pixels.push(o)):(n.length+=o.num,n.pixels.push(o))}),{right:new i(r.pixels,r.length),left:new i(n.pixels,n.length)}}}class s{constructor(t,e=.5){this.volumes=[],this.pixels=[];const n=function(t,e){r.width=t.naturalWidth*e,r.height=t.naturalHeight*e;const n=r.getContext("2d");return n.drawImage(t,0,0,r.width,r.height),n.getImageData(0,0,r.width,r.height).data}(t,e);for(let t=0,e=n.length;t<e;t+=4){const e=new o(n[t+0],n[t+1],n[t+2]);this.pixels.push(e)}const s=(new i).fromColors(this.pixels);this.volumes=[s]}getPalette(t,e=5){o.bit=e;let n=0;for(;this.volumes.length<t;){const t=[];for(let e=0,n=this.volumes.length;e<n;e++){const n=this.volumes[e],{left:r,right:o}=n.cutWidthDimension();0!==r.length&&t.push(r),0!==o.length&&t.push(o)}if(this.volumes=t.sort((t,e)=>e.length-t.length),n===this.volumes.length){console.warn("too small pixels");break}n=this.volumes.length}const r=this.volumes.slice(0,t).map(t=>t.mainColor());return this.getSimilarPalette(r)}getSimilarPalette(t){const e=t.length,n=new Array(e);for(let t=0;t<e;t++)n[t]={delta:765,color:null};return this.pixels.forEach(r=>{for(let i=0;i<e;i++){const e=n[i],s=o.delta(r,t[i]);s<e.delta&&(e.delta=s,e.color=r)}}),n.map(t=>t.color)}}e.default=function(t,e,n){return new s(t,n.image).getPalette(e,n.algorithm)}}])});